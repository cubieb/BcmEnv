/*
 * Note: this file originally auto-generated by mib2c using
 *        $
 */
#include "SystemInclude.h"
#include "BcmController.h"

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

#include "Debug.h"
#include "CnuServiceMgt.h"
#include "gsAnCmcCmStatistics.h"
using namespace std;

/** Initializes the gsAnCmcCmStatistics module */
void
InitGsAnCmcCmStatistics(void)
{
    const oid gsAnCmcCmTotal_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,1 };
    const oid gsAnCmcCmActive_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,2 };
    const oid gsAnCmcCmOnline_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,3 };
    const oid gsAnCmcCmOffline_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,4 };
    const oid gsAnCmcCmInitR_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,5 };
    const oid gsAnCmcCmRC_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,6 };
    const oid gsAnCmcCmDHCPDiscover_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,7 };
    const oid gsAnCmcCmDHCPOffer_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,8 };
    const oid gsAnCmcCmDHCPRequest_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,9 };
    const oid gsAnCmcCmDHCPAck_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,10 };
    const oid gsAnCmcCmInitF_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,11 };
    const oid gsAnCmcCmFC_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,12 };
    const oid gsAnCmcCmInitREG_oid[] = { 1,3,6,1,4,1,22764,1015,9026,2,1,1,13 };

    DEBUGMSGTL(("gsAnCmcCmStatistics", "Initializing\n"));

    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmTotal", handle_gsAnCmcCmTotal,
                               gsAnCmcCmTotal_oid, OID_LENGTH(gsAnCmcCmTotal_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmActive", handle_gsAnCmcCmActive,
                               gsAnCmcCmActive_oid, OID_LENGTH(gsAnCmcCmActive_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmOnline", handle_gsAnCmcCmOnline,
                               gsAnCmcCmOnline_oid, OID_LENGTH(gsAnCmcCmOnline_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmOffline", handle_gsAnCmcCmOffline,
                               gsAnCmcCmOffline_oid, OID_LENGTH(gsAnCmcCmOffline_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmInitR", handle_gsAnCmcCmInitR,
                               gsAnCmcCmInitR_oid, OID_LENGTH(gsAnCmcCmInitR_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmRC", handle_gsAnCmcCmRC,
                               gsAnCmcCmRC_oid, OID_LENGTH(gsAnCmcCmRC_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmDHCPDiscover", 
                               handle_gsAnCmcCmDHCPDiscover,
                               gsAnCmcCmDHCPDiscover_oid, OID_LENGTH(gsAnCmcCmDHCPDiscover_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmDHCPOffer", 
                               handle_gsAnCmcCmDHCPOffer,
                               gsAnCmcCmDHCPOffer_oid, OID_LENGTH(gsAnCmcCmDHCPOffer_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmDHCPRequest", 
                               handle_gsAnCmcCmDHCPRequest,
                               gsAnCmcCmDHCPRequest_oid, OID_LENGTH(gsAnCmcCmDHCPRequest_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmDHCPAck", 
                               handle_gsAnCmcCmDHCPAck,
                               gsAnCmcCmDHCPAck_oid, OID_LENGTH(gsAnCmcCmDHCPAck_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmInitF", handle_gsAnCmcCmInitF,
                               gsAnCmcCmInitF_oid, OID_LENGTH(gsAnCmcCmInitF_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmFC", handle_gsAnCmcCmFC,
                               gsAnCmcCmFC_oid, OID_LENGTH(gsAnCmcCmFC_oid),
                               HANDLER_CAN_RONLY
        ));
    netsnmp_register_scalar(
        netsnmp_create_handler_registration("gsAnCmcCmInitREG", handle_gsAnCmcCmInitREG,
                               gsAnCmcCmInitREG_oid, OID_LENGTH(gsAnCmcCmInitREG_oid),
                               HANDLER_CAN_RONLY
        ));
}

int
handle_gsAnCmcCmTotal(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{       
    U32 CmCount = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmCount, sizeof(CmCount));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmTotal\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmActive(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{       
    dbgstrm << "Start." << endl;

    CMCOAM_CmLstT CmList;
    memset(&CmList,0,sizeof(CMCOAM_CmLstT));
        
    switch(reqinfo->mode) 
    {
        case MODE_GET:

            if (BASE_OK!= CMCOAM_Cm_GetCnuList(&CmList, cliGetCmc()))
		return SNMP_ERR_NOACCESS;

            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                       &CmList.num_of_cm, sizeof(CmList.num_of_cm));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmActive\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmOnline(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmOnline = 0;    
    switch(reqinfo->mode) 
    {

        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmOnline, sizeof(CmOnline));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmOnline\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmOffline(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmOffline = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmOffline, sizeof(CmOffline));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmOffline\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmInitR(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmInitR = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmInitR, sizeof(CmInitR));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmInitR\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmRC(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmRC = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmRC, sizeof(CmRC));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmRC\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmDHCPDiscover(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 DhcpDiscover = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &DhcpDiscover, sizeof(DhcpDiscover));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmDHCPDiscover\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmDHCPOffer(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 DhcpOffer = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &DhcpOffer, sizeof(DhcpOffer));
            break;
            
        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmDHCPOffer\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmDHCPRequest(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 DhcpRequest = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &DhcpRequest, sizeof(DhcpRequest));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmDHCPRequest\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmDHCPAck(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 DhcpAck = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &DhcpAck, sizeof(DhcpAck));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmDHCPAck\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmInitF(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmInitF = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmInitF, sizeof(CmInitF));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmInitF\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmFC(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmFC = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmFC, sizeof(CmFC));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmFC\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
int
handle_gsAnCmcCmInitREG(netsnmp_mib_handler *handler,
                          netsnmp_handler_registration *reginfo,
                          netsnmp_agent_request_info   *reqinfo,
                          netsnmp_request_info         *requests)
{
    U32 CmInitREG = 0;    
    switch(reqinfo->mode) 
    {
        case MODE_GET:
            snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
                                     &CmInitREG, sizeof(CmInitREG));
            break;

        default:
            /* we should never get here, so this is a really bad error */
            snmp_log(LOG_ERR, "unknown mode (%d) in handle_gsAnCmcCmInitREG\n", reqinfo->mode );
            return SNMP_ERR_GENERR;
    }
    return SNMP_ERR_NOERROR;
}
